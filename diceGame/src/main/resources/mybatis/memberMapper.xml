<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="net.netne.api.dao.IMemberDao">
     <!-- 新增用户 -->
	 <insert id="addMember" parameterType="Member">
	 		insert into member 
	 			(name,password,mobile,sex,reg_time,modify_time) 
	 		values
	 			(#{name},#{password},#{mobile},#{sex},now(),now())
	 	<selectKey resultType="int" keyProperty="id" order="AFTER">  
  			SELECT LAST_INSERT_ID() as id
  		</selectKey>  
	 </insert>
	 
	 <!-- 新增用户账户信息 -->
	 <insert id="addAccount" parameterType="Account">
	 	insert into account (member_id,score_amount,freeze_amount,modify_time) values(#{memberId},#{scoreAmount},#{freezeAmount},now())
	 </insert>
	 
	 <!-- 修改用户信息 -->
	 <update id="updateMember" parameterType="map">
	     update member set name=#{name}, sex=#{sex},modify_time=now() where id = #{memberId};
	 </update>
	 
	 <!-- 修改密码 -->
	 <update id="modifyPassword" parameterType="map">
	     update member set password=#{password},modify_time=now() where id = #{memberId};
	 </update>
	 
	 <!-- 手机号获取用户信息-->
	 <select id="getMember" resultType="Member" parameterType="String">
		select id,name,password,mobile,sex from member where mobile = #{mobile};
	 </select>
	 
	 <!-- ID获取用户信息-->
	 <select id="getMemberById" resultType="Member" parameterType="Integer">
		select id,name,password,mobile,sex from member where id = #{id};
	 </select>
	 
	 <!-- 读取用户记录总数 -->
	 <select id="getMemberCount" resultType="long">
	 	select count(id) from member;
	 </select>
	 
	  <!-- 读取用户记录总数 -->
	 <resultMap type="Member" id="MemberResult">
	 	<result column="id" property="id"/>
	 	<result column="name" property="name"/>
	 	<result column="mobile" property="mobile"/>
	 	<result column="sex" property="sex"/>
        <association property="account" javaType="Account">
        	<result column="score_amount" property="scoreAmount"/>
        </association>
     </resultMap>  
	 <select id="getMemberList" resultMap="MemberResult" parameterType="map">
	 	select member.id as id,name,mobile,sex,score_amount
	 	from member inner join account on member.id = account.member_id
	 	order by id desc limit #{startNum},#{size};
	 </select>
	
	 <!-- 获取用户账户信息-->
	 <select id="getAccount" resultType="Account" parameterType="int">
		select score_amount as scoreAmount,freeze_amount as freezeAmount from account where member_id = #{memberId};
	 </select>
	 
	 <!-- 保存用户照片 -->
	 <insert id="addMemberPhoto" parameterType="MemberPhoto">
	 		insert into member_photo (member_id,photo) values(#{memberId},#{photo})
	 </insert>
	 
	 <!-- 保存用户照片 -->
	 <update id="updateMemberPhoto" parameterType="MemberPhoto">
	 		update member_photo set photo = #{photo} where member_id = #{memberId}
	 </update>
	 
	 <!-- 读取用户照片 -->
	  <select id="getMemberPhoto" parameterType="int" resultType="MemberPhoto">
	 		select member_id,photo from member_photo where member_id = #{memberId}
	 </select>
	 
	 <select id="sysLogin" resultType="Member" parameterType="string">
	 	select * from sys_user where name = #{name} limit 0,1
	 </select>
	 
	 <insert id="addLoginLog" parameterType="LoginLog">
	 		insert into login_log 
	 			(member_id,ip,login_time) 
	 		values
	 			(#{memberId},#{ip},now())
	 	<selectKey resultType="int" keyProperty="id" order="AFTER">  
  			SELECT LAST_INSERT_ID() as id
  		</selectKey>  
	 </insert>
	 
	 <select id="getLoginCount" resultType="int" parameterType="int">
	 	select count(id) as loginCount from login_log 
	 	where DATE_FORMAT(login_time,'%Y-%m-%d') = DATE_FORMAT(now(),'%Y-%m-%d')
	 	and member_id = #{memberId}
	 </select>
	 
	<update id="modifyAdminPwd" parameterType="Member">
	     update sys_user set password = #{password} where name = #{name}
	</update>
	 
</mapper> 
